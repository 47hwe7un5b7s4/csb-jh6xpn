{"version":3,"sources":["../../src/index.js","../node_modules/prism-react-renderer/themes/nightOwl/index.js","../node_modules/prism-react-renderer/prism/index.js","../node_modules/prism-react-renderer/themes/duotoneDark/index.js","../node_modules/prism-react-renderer/dist/index.js"],"names":["React","KEYCODE_Z","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","test","navigator","isMacLike","className","Editor","state","capture","_recordCurrentState","input","value","selectionStart","selectionEnd","_getLines","text","_recordChange","overwrite","stack","offset","count","extras","Math","timestamp","Date","last","re","previous","current","record","_updateInput","_applyEdits","_undoEdit","_redoEdit","_handleKeyDown","tabSize","insertSpaces","ignoreTabKey","onKeyDown","e","tabCharacter","linesBeforeCaret","startLine","endLine","nextValue","i","line","startLineText","updatedSelection","hasSelection","textBeforeCaret","matches","indent","chars","_handleChange","_history","this","style","padding","highlight","textareaId","textareaClassName","autoFocus","disabled","form","maxLength","minLength","name","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","preClassName","rest","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","styles","ref","c","id","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","dangerouslySetInnerHTML","__html","children","type","cssText","history","session","Component","defaultProps","container","position","textAlign","boxSizing","overflow","textarea","top","left","height","width","resize","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","editor","margin","border","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","theme","plain","backgroundColor","types","Prism","uniqueId","_","util","encode","tokens","Token","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","clone","visited","key","hasOwnProperty","forEach","v","languages","extend","redef","lang","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","callback","plugins","language","env","code","hooks","run","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","slice","after","args","push","wrapped","Array","splice","apply","add","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","variable","toBeCopied","shell","clike","keyword","cpp","string","css","addInlined","selectorInside","selector","unit","number","javascript","regex","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","withId","unshift","maybeClassNameTokens","comment","interpolation","coffeescript","coffee","diff","PREFIXES","prefix","git","go","graphql","markdown","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","indexOf","tokenizePlaceholders","t","s","substring","middle","replacement","concat","handlebars","punctuation","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","l","codeLang","codeBlock","toLowerCase","cls","autoloader","valueOf","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","property","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","opacity","textDecorationLine","_defineProperty","enumerable","configurable","writable","_extends","assign","newlineRe","normalizeEmptyLines","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","this$1","props","undefined","prevTheme","prevLanguage","output","getThemeDict","baseStyle","typeStyles","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps"],"mappings":"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","file":"static/js/12.8f15b960.chunk.js","sourcesContent":["/* @flow */\n/* global global */\n\nimport * as React from 'react';\n\ntype Props = React.ElementConfig<'div'> & {\n  // Props for the component\n  value: string,\n  onValueChange: (value: string) => mixed,\n  highlight: (value: string) => string | React.Node,\n  tabSize: number,\n  insertSpaces: boolean,\n  ignoreTabKey: boolean,\n  padding: number | string,\n  style?: {},\n\n  // Props for the textarea\n  textareaId?: string,\n  textareaClassName?: string,\n  autoFocus?: boolean,\n  disabled?: boolean,\n  form?: string,\n  maxLength?: number,\n  minLength?: number,\n  name?: string,\n  placeholder?: string,\n  readOnly?: boolean,\n  required?: boolean,\n  onClick?: (e: MouseEvent) => mixed,\n  onFocus?: (e: FocusEvent) => mixed,\n  onBlur?: (e: FocusEvent) => mixed,\n  onKeyUp?: (e: KeyboardEvent) => mixed,\n  onKeyDown?: (e: KeyboardEvent) => mixed,\n\n  // Props for the hightlighted code’s pre element\n  preClassName?: string,\n};\n\ntype State = {\n  capture: boolean,\n};\n\ntype Record = {\n  value: string,\n  selectionStart: number,\n  selectionEnd: number,\n};\n\ntype History = {\n  stack: Array<Record & { timestamp: number }>,\n  offset: number,\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nconst isMacLike =\n  'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class Editor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  _getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  _recordChange = (record: Record, overwrite?: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart)\n          .pop()\n          .match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart)\n          .pop()\n          .match(re);\n\n        if (previous && current && current[1].startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  _handleKeyDown = (e: *) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.keyCode === KEYCODE_ESCAPE) {\n      e.target.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart: /\\S/.test(startLineText)\n            ? selectionStart + tabCharacter.length\n            : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line.match(/^\\s+/);\n\n        if (matches && matches[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n          ? // Trigger redo with Ctrl+Y on Windows\n            e.ctrlKey && e.keyCode === KEYCODE_Y\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState(state => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  _handleChange = (e: *) => {\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  _input: ?HTMLTextAreaElement;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      textareaClassName,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable no-unused-vars */\n      preClassName,\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <textarea\n          ref={c => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={\n            className + (textareaClassName ? ` ${textareaClassName}` : '')\n          }\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        <pre\n          className={preClassName}\n          aria-hidden=\"true\"\n          style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n};\n","// Original: https://github.com/sdras/night-owl-vscode-theme\n// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [{\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(162, 191, 252)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgba(239, 83, 80, 0.56)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"inserted\", \"attr-name\"],\n    style: {\n      color: \"rgb(173, 219, 103)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(99, 119, 119)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"url\"],\n    style: {\n      color: \"rgb(173, 219, 103)\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"rgb(214, 222, 235)\"\n    }\n  }, {\n    types: [\"number\"],\n    style: {\n      color: \"rgb(247, 140, 108)\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"function\"],\n    style: {\n      color: \"rgb(130, 170, 255)\"\n    }\n  }, {\n    // This was manually added after the auto-generation\n    // so that punctuations are not italicised\n    types: [\"punctuation\"],\n    style: {\n      color: \"rgb(199, 146, 234)\"\n    }\n  }, {\n    types: [\"selector\", \"doctype\"],\n    style: {\n      color: \"rgb(199, 146, 234)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(255, 203, 139)\"\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"keyword\"],\n    style: {\n      color: \"rgb(127, 219, 202)\"\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: \"rgb(255, 88, 116)\"\n    }\n  }, {\n    types: [\"property\"],\n    style: {\n      color: \"rgb(128, 203, 196)\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      color: \"rgb(178, 204, 214)\"\n    }\n  }]\n};\n\nexport default theme;\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function (tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function (o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function (obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function (o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function (o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run(\"before-tokenize\", env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run(\"after-tokenize\", env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function () {},\n      run: function (name, env) {}\n    },\n    tokenize: function (text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'function': /[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'operator', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n        lookbehind: true,\n        inside: {\n          'attr-value': {\n            pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n            inside: {\n              'style': {\n                pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                lookbehind: true,\n                alias: 'language-css',\n                inside: Prism.languages.css\n              },\n              'punctuation': [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          },\n          'attr-name': /^style/i\n        }\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'font-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    'keyword': /\\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/true|false/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n\nexport default Prism;\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","import Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n"],"sourceRoot":""}